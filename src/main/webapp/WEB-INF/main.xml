<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <value>classpath:config.properties</value>
        </property>
    </bean>

    <bean id="myTxManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>

    <bean id="dao" class="nz.ac.op.soften2016.service.Dao">
        <property name="sessionFactory" ref="mySessionFactory"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="myTxManager">
        <tx:attributes>
            <!--
            <tx:method name="list*" read-only="true"/>
            <tx:method name="get*" read-only="true"/>
            -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!--
        id for ResourceBundleMessageSource must be messageSource
    -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/messages"/>
        <property name="cacheSeconds" value="1"/>
    </bean>

    <!-- freemarker config -->
    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>
    </bean>

    <!--
      View resolvers can also be configured with ResourceBundles or XML files. If you need
      different successView resolving based on Locale, you have to use the resource bundle resolver.

      if you want to use the Spring FreeMarker macros, set exposeSpringMacroHelpers to true
    -->
    <bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>

    <!--
        Exception handler.
    -->
    <!-- -->
    <!-- -->


</beans>
